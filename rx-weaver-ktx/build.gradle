apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

android {
    compileSdkVersion rootProject.ext.build_versions.compile_version
    buildToolsVersion rootProject.ext.build_versions.build_tools

    defaultConfig {
        minSdkVersion rootProject.ext.build_versions.min_sdk
        targetSdkVersion rootProject.ext.build_versions.target_sdk
        versionCode versionMajor * 100 + versionMinor * 10 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "buildTime", "\"" + buildTime() + "\""

        // 指明打包混淆规则
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    implementation rootProject.ext.deps.kotlin.stdlib

    //rxjava2
    implementation rootProject.ext.deps.rxjava2
    implementation rootProject.ext.deps.rx_android
}

ext {
    ARTIFACT_ID = 'weaver-ktx' //项目名称
    PUBLISH_VERSION = android.defaultConfig.versionName//版本号
}

apply plugin: 'org.jetbrains.dokka-android'

// 制作文档(Javadoc)
task providejavaDoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.srcDirs
    options.encoding = "UTF-8"
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'providejavaDoc'
    outputDirectory = providejavaDoc.destinationDir
}